(*PONTO EXTRA LP*)

(*1) Implemente uma função recursiva que calcule a potencia de um número por outro (nk).*)
fun power (base: int, exp: int) = if exp = 0 then 1 else base * power(base, exp - 1);
power (5, 5);
power (5, 0);

(*2) Crie uma função chamada aplicacaoTripla que receba um funcao f como parametro e um valor x e retorne o resultado de três aplicações da função f sobre o valor x.*)
fun aplicacaoTripla (f: int -> int, x: int) : int = f(f(f(x)));
val result = aplicacaoTripla (fn x => x * 2, 5);

(*3) Crie uma função "makeMultiplier" que receba um inteiro n e retorne um função que multiplique uma entrada por n.*)
fun makeMultiplier (n: int) : int -> int = fn x => x * n;
val multiplier = makeMultiplier 2;
multiplier 5;

(*4) Crie uma função chamada "sinal" que retorne "positivo", "negativo" ou "zero" dependendo do valor de uma entrada inteira.*)
fun sinal (x: int) : string = if x = 0 then "zero" else if x > 0 then "positivo" else "negativo";
sinal 5;
sinal 0;
sinal ~5;
